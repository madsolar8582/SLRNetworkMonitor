{"Type Definitions.html#/c:SLRNetworkMonitor.h@T@SLRNetworkMonitorUserInfoKey":{"name":"SLRNetworkMonitorUserInfoKey","abstract":"<p>Convenience typedef for user info keys in notifications posted from instances of @c SLRNetworkMonitor.</p>"},"Enums/SLRNetworkMonitorType.html#/c:@E@SLRNetworkMonitorType@SLRNetworkMonitorTypeWiFi":{"name":"SLRNetworkMonitorTypeWiFi","abstract":"<p>Monitor that only monitors internet connectivity via WiFi.</p>","parent_name":"SLRNetworkMonitorType"},"Enums/SLRNetworkMonitorType.html#/c:@E@SLRNetworkMonitorType@SLRNetworkMonitorTypeCellular":{"name":"SLRNetworkMonitorTypeCellular","abstract":"<p>Monitor that only monitors internet connectivity via Cellular.</p>","parent_name":"SLRNetworkMonitorType"},"Enums/SLRNetworkMonitorType.html#/c:@E@SLRNetworkMonitorType@SLRNetworkMonitorTypeWired":{"name":"SLRNetworkMonitorTypeWired","abstract":"<p>Monitor that only monitors internet connectivity via Ethernet.</p>","parent_name":"SLRNetworkMonitorType"},"Enums/SLRNetworkMonitorType.html#/c:@E@SLRNetworkMonitorType@SLRNetworkMonitorTypeAll":{"name":"SLRNetworkMonitorTypeAll","abstract":"<p>Monitor that only monitors internet connectivity via any available interface type.</p>","parent_name":"SLRNetworkMonitorType"},"Enums/SLRNetworkMonitorType.html":{"name":"SLRNetworkMonitorType","abstract":"<p>@enum SLRNetworkMonitorType"},"Constants.html#/c:@SLRNetworkMonitorDidStartMonitoringNotification":{"name":"SLRNetworkMonitorDidStartMonitoringNotification","abstract":"<p>Notification posted when an instance of @c SLRNetworkMonitor begins monitoring the device&rsquo;s network connectivity status.</p>"},"Constants.html#/c:@SLRNetworkMonitorDidStopMonitoringNotification":{"name":"SLRNetworkMonitorDidStopMonitoringNotification","abstract":"<p>Notification posted when an instance of @c SLRNetworkMonitor stops monitoring the device&rsquo;s network connectivity status.</p>"},"Constants.html#/c:@SLRNetworkMonitorNetworkStateDidChangeNotification":{"name":"SLRNetworkMonitorNetworkStateDidChangeNotification","abstract":"<p>Notification posted when an instance of @c SLRNetworkMonitor detects a change in the device&rsquo;s network connectivity status. Details are in the @c userInfo object.</p>"},"Constants.html#/c:@SLRNetworkMonitorNetworkStatusKey":{"name":"SLRNetworkMonitorNetworkStatusKey","abstract":"<p>Notification user info key that contains the current network connectivity status (@c nw_path_status_t) wrapped in a @c NSNumber.</p>"},"Constants.html#/c:@SLRNetworkMonitorNetworkUsesWiFiKey":{"name":"SLRNetworkMonitorNetworkUsesWiFiKey","abstract":"<p>Notification user info key that contains a boolean of whether or not the current network uses WiFi wrapped in a @c NSNumber.</p>"},"Constants.html#/c:@SLRNetworkMonitorNetworkUsesCellularKey":{"name":"SLRNetworkMonitorNetworkUsesCellularKey","abstract":"<p>Notification user info key that contains a boolean of whether or not the current network uses Cellular wrapped in a @c NSNumber.</p>"},"Constants.html#/c:@SLRNetworkMonitorNetworkUsesWiredKey":{"name":"SLRNetworkMonitorNetworkUsesWiredKey","abstract":"<p>Notification user info key that contains a boolean of whether or not the current network uses Ethernet wrapped in a @c NSNumber.</p>"},"Constants.html#/c:@SLRNetworkMonitorNetworkIsExpensiveKey":{"name":"SLRNetworkMonitorNetworkIsExpensiveKey","abstract":"<p>Notification user info key that contains a boolean of whether or not the current network uses an expensive route wrapped in a @c NSNumber.</p>"},"Constants.html#/c:@SLRNetworkMonitorNetworkSupportsIPv4Key":{"name":"SLRNetworkMonitorNetworkSupportsIPv4Key","abstract":"<p>Notification user info key that contains a boolean of whether or not the current network supports IPv4 wrapped in a @c NSNumber.</p>"},"Constants.html#/c:@SLRNetworkMonitorNetworkSupportsIPv6Key":{"name":"SLRNetworkMonitorNetworkSupportsIPv6Key","abstract":"<p>Notification user info key that contains a boolean of whether or not the current network supports IPv6 wrapped in a @c NSNumber.</p>"},"Constants.html#/c:@SLRNetworkMonitorNetworkHasDNSKey":{"name":"SLRNetworkMonitorNetworkHasDNSKey","abstract":"<p>Notification user info key that contains a boolean of whether or not the current network has a DNS configuration wrapped in a @c NSNumber.</p>"},"Constants.html#/c:@SLRNetworkMonitorUsableInterfacesKey":{"name":"SLRNetworkMonitorUsableInterfacesKey","abstract":"<p>Notification user info key that contains a @c NSDictionary of interface names (@c NSString) to a @c NSArray of their usable address(es).</p>"},"Constants.html#/c:@SLRNetworkMonitorDNSServersKey":{"name":"SLRNetworkMonitorDNSServersKey","abstract":"<p>Notification user info key that contains a @c NSArray of DNS server addresses as @c NSStrings.</p>"},"Constants.html#/c:@SLRNetworkMonitorCellularProvidersKey":{"name":"SLRNetworkMonitorCellularProvidersKey","abstract":"<p>Notification user info key that contains a @c NSDictionary of cellular services (@c NSString) to a @c CTCarrier objects that contain information about the cellular provider.</p>"},"Constants.html#/c:@SLRNetworkMonitorCellularRadioTechnologiesKey":{"name":"SLRNetworkMonitorCellularRadioTechnologiesKey","abstract":"<p>Notification user info key that contains a @c NSDictionary of cellular services (@c NSString) to a @c NSString representation of their active radio technology.</p>"},"Classes/SLRNetworkMonitor.html#/c:objc(cs)SLRNetworkMonitor(py)monitorType":{"name":"monitorType","abstract":"<p>The type of the monitor.</p>","parent_name":"SLRNetworkMonitor"},"Classes/SLRNetworkMonitor.html#/c:objc(cs)SLRNetworkMonitor(py)currentPath":{"name":"currentPath","abstract":"<p>The current network path being monitored.</p>","parent_name":"SLRNetworkMonitor"},"Classes/SLRNetworkMonitor.html#/c:objc(cs)SLRNetworkMonitor(im)initWithMonitorType:workQueue:notificationQueue:":{"name":"-initWithMonitorType:workQueue:notificationQueue:","abstract":"<p>Designated initializer that creates a new instance of a @c SLRNetworkMonitor of a specific type, work queue, &amp; notification queue.</p>","parent_name":"SLRNetworkMonitor"},"Classes/SLRNetworkMonitor.html#/c:objc(cs)SLRNetworkMonitor(cm)monitorWithType:workQueue:notificationQueue:":{"name":"+monitorWithType:workQueue:notificationQueue:","abstract":"<p>Convenience initializer that creates a new instance of a @c SLRNetworkMonitor of a specific type, work queue, &amp; notification queue.</p>","parent_name":"SLRNetworkMonitor"},"Classes/SLRNetworkMonitor.html#/c:objc(cs)SLRNetworkMonitor(cm)monitor":{"name":"+monitor","abstract":"<p>Convenience initializer that creates a new instance of a @c SLRNetworkMonitor with the default configuration.</p>","parent_name":"SLRNetworkMonitor"},"Classes/SLRNetworkMonitor.html#/c:objc(cs)SLRNetworkMonitor(im)startMonitoring":{"name":"-startMonitoring","abstract":"<p>Tells a @c SLRNetworkMonitor to begin monitoring for network connectivity status changes.</p>","parent_name":"SLRNetworkMonitor"},"Classes/SLRNetworkMonitor.html#/c:objc(cs)SLRNetworkMonitor(im)stopMonitoring":{"name":"-stopMonitoring","abstract":"<p>Tells a @c SLRNetworkMonitor to stop monitoring for network connectivity status changes.</p>","parent_name":"SLRNetworkMonitor"},"Classes/SLRNetworkMonitor.html":{"name":"SLRNetworkMonitor","abstract":"<p>@class SLRNetworkMonitor"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Type Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"}}